{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Kalendarz","state","rozpoczęcia","zakończenia","wynik","każdy","remark","kalkulator","bind","this","setState","split","length","splittingRozpoczęcia","splittingZakończenia","premiryMiesiąć","compensate","monthGapByYear","Number","monthGapByMonth","jedenNumer","miesiąc","map","i","actualMonth","j","start","push","k","last","każdegoDnia","d","p","pto","className","class","b","bank","dateName","month","placeholder","onChange","e","target","value","onClick","window","location","href","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86b46a5a.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\n\n\nclass Kalendarz extends Component {\n  constructor () {\n    super ();\n    this.state = {\n      rozpoczęcia: null,\n      zakończenia: null,\n      wynik: \"Wanna try to calculate how many month(s) between two days?\",\n      każdy: [\n        {\"month\": \"January\", \"start\": 7, \"last\": 31, \"pto\": [], \"bank\": [1, 6], \"dateName\": {\"1\": \"New Year Day\", \"6\": \"Three Kings' Day\"}},\n        {\"month\": \"February\", \"start\": 3, \"last\": 28, \"pto\": [9], \"bank\": []},\n        {\"month\": \"March\", \"start\": 3, \"last\": 31, \"pto\": [], \"bank\": []},\n        {\"month\": \"April\", \"start\": 6, \"last\": 30, \"pto\": [], \"bank\": [9, 10], \"dateName\": {\"9\": \"Easter\", \"10\": \"Easter Monday\"}},\n        {\"month\": \"May\", \"start\": 1, \"last\": 31, \"pto\": [], \"bank\": [1, 3], \"dateName\": {\"1\": \"Labour Day\", \"3\": \"Constitution Day\"}},\n        {\"month\": \"June\", \"start\": 4, \"last\": 30, \"pto\": [], \"bank\": [8], \"dateName\": {\"8\": \"Corpus Christi Day\"}},\n        {\"month\": \"July\", \"start\": 6, \"last\": 31, \"pto\": [], \"bank\": []},\n        {\"month\": \"August\", \"start\": 2, \"last\": 31, \"pto\": [], \"bank\": [15], \"dateName\": {\"15\": \"Assumption Day\"}},\n        {\"month\": \"September\", \"start\": 5, \"last\": 30, \"pto\": [], \"bank\": []},\n        {\"month\": \"Octobor\", \"start\": 0, \"last\": 31, \"pto\": [], \"bank\": []},\n        {\"month\": \"November\", \"start\": 3, \"last\": 30, \"pto\": [], \"bank\": [1, 11], \"dateName\": {\"1\": \"All Saints' Day\", \"11\": \"Independence Day\"}},\n        {\"month\": \"December\", \"start\": 5, \"last\": 31, \"pto\": [], \"bank\": [25, 26], \"dateName\": {\"25\": \"Christmas Day\", \"26\": \"St. Stephen's Day\"}}\n      ],\n      remark: null\n    }\n    this.kalkulator = this.kalkulator.bind(this)\n  }\n  kalkulator () {\n    if (this.state.rozpoczęcia === null || this.state.zakończenia === null) {\n      this.setState({wynik: \"there is problem of input, maybe try again?\"})\n    } else {\n      if (this.state.rozpoczęcia.split(\"/\").length !== 3 || this.state.zakończenia.split(\"/\").length !== 3) {\n        this.setState({wynik: \"the input format is incorrect, you sure it is like Month/Date/Year?\"})\n      } else {\n        //verify whether the same year\n        let splittingRozpoczęcia = this.state.rozpoczęcia.split(\"/\")\n        let splittingZakończenia = this.state.zakończenia.split(\"/\")\n        if (splittingRozpoczęcia[2] === splittingZakończenia[2]) {\n          //okay, same year\n          //we see the first number is month\n          //calculate the difference between month, \n          let premiryMiesiąć = splittingZakończenia[0] - splittingRozpoczęcia[0]\n          if (premiryMiesiąć > 12 || premiryMiesiąć < 1) {\n            this.setState({wynik: \"try format Month/Date/Year again\"})\n          } else {\n            //if the latter date is smaller than start date\n            //we don't need to add another month\n            //if it is at least the same data, we need to add another month\n            if (splittingZakończenia[1] < splittingRozpoczęcia[1]) {\n              this.setState({ wynik: \"the correct number is: \" + premiryMiesiąć})\n            } else {\n              let compensate = premiryMiesiąć + 1\n              this.setState({ wynik: \"the correct number term is: \" + compensate})\n            }\n          }\n        } else {\n          //not the same year\n          //calculate month by year gap\n          let monthGapByYear = 12 * (Number(splittingZakończenia[2]) - Number(splittingRozpoczęcia[2]))\n          let monthGapByMonth = Number(splittingZakończenia[0]) - Number(splittingRozpoczęcia[0])\n          let monthGapByDate = Number(splittingZakończenia[1]) - Number(splittingRozpoczęcia[1])\n          if (monthGapByDate < 0) {\n            let jedenNumer = Number(monthGapByYear) + Number(monthGapByMonth)\n            this.setState({ wynik: \"the correct number term is: \" + jedenNumer})\n          } else {\n            let jedenNumer = Number(monthGapByYear) + Number(monthGapByMonth) + 1\n            this.setState({ wynik: \"the correct number term is: \" + jedenNumer})\n          }\n        }\n      }\n    }\n  }\n  render () {\n    let miesiąc = this.state.każdy.map( i => {\n      let actualMonth = []\n      for (let j = 0; j < i.start; j++) {\n        actualMonth.push(null)\n      }\n      for (let k = 0; k < i.last; k++) {\n        actualMonth.push(k+1)\n      }\n      let każdegoDnia = actualMonth.map( d => {\n        let confirm = true\n        for (let p = 0; p < i.pto.length; p++) {\n          if (d === i.pto[p]) {\n            confirm = false\n            return(\n              <div className='tooltip'>\n                <div className='dni-pto-text'>\n                  {d}\n                  <div class=\"left\">\n                      <h3>I am OOO on Feb. 9</h3>\n                      <p>just one day, will be back soon</p>\n                      <i></i>\n                  </div>  \n                </div>\n              </div>\n            )\n          } \n        }\n        for (let b = 0; b < i.bank.length; b++) {\n          if (d === i.bank[b]) {\n            confirm = false\n            return(\n              <div className='tooltip'>\n                <div className='dni-bank-text'>\n                  {d}\n                  <div class=\"left\">\n                      <h3>{i.dateName[d]}</h3>\n                      <i></i>\n                  </div>  \n                </div>\n              </div>\n            )\n          } \n        }\n        if (confirm = true) {\n          return(\n            <div className='centeringText'>{d}</div>\n          )\n        }\n      })\n      return (\n        <div>\n          <div className='card-project'>\n              <div className='miesiąc'>{i.month}</div>\n              <div className=\"limit-width-sieben\"><hr /></div>\n              <div className='tydzień'>\n                <div className='tydzień-sunday centeringText'>Sun</div>\n                <div className='centeringText'>Mon</div>\n                <div className='centeringText'>Tue</div>\n                <div className='centeringText'>Wed</div>\n                <div className='centeringText'>Thu</div>\n                <div className='centeringText'>Fri</div>\n                <div className='tydzień-saturday'>Sat</div>\n              </div>\n              <div className=\"dni-container\">{każdegoDnia}</div>\n          </div>\n        </div>\n      )\n    })\n    return (\n      <body>\n        <div className='main-title'>2023 Calendar</div>\n        <div className=\"kalkulator-frame\">\n          <div className='kalkulator-input-frame'>\n            <input className=\"kalkulator-line\" placeholder='Start of Date, Month/Date/Year' onChange={(e) => {this.setState({ rozpoczęcia: e.target.value })}}/>\n          </div>\n          <div className='kalkulator-input-frame'>\n            <input className=\"kalkulator-line\" placeholder='End of Date, Month/Date/Year' onChange={(e) => {this.setState({ zakończenia: e.target.value })}}/>\n          </div>\n          <div className=\"kalkulator-button\" onClick={() => {this.kalkulator()}}>Calculate</div>\n          <div className='wynik'>{this.state.wynik}</div>\n        </div>\n        <br />\n        {/**/}\n        <div className='center-by-margin'>{miesiąc}</div>\n        <div className='remark-frame'>\n          <div className='remark' onClick={() => {this.setState({remark: null})}}>{this.state.remark}</div>\n        </div>\n        <div className='bottom-note'>\n          <div className='bottom-note-bank' onClick={() => {window.location.href='https://www.officeholidays.com/countries/poland/2023'}}>* Bank Holiday in Poland</div>\n          <div className='bottom-note-PTO'>* PTO duration</div>\n        </div>\n        <br />\n      </body>\n    )\n  }\n}\n\nexport default Kalendarz;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}