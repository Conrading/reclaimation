{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["MainPage","useState","showTable","setShowTable","currentPlay","switchPage","n","i","jedesBild","document","getElementsByClassName","length","style","display","playPage","className","onClick","km","jedes","section","field","update","option","commend","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kiBAmFeA,MA/Ef,WACE,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACIC,EAAc,EAClB,SAASC,EAAYC,IAGrB,SAAmBA,GACjB,IAAIC,EACEC,EAAYC,SAASC,uBAAuB,sBAC9CJ,EAAIE,EAAUG,SAASP,EAAc,GACrCE,EAAI,IAAIF,EAAcI,EAAUG,QACpC,IAAKJ,EAAI,EAAGA,EAAIC,EAAUG,OAAQJ,IAChCC,EAAUD,GAAGK,MAAMC,QAAU,OAE/BL,EAAUJ,EAAY,GAAGQ,MAAMC,QAAU,QAVzCC,CAASV,GAAeE,GAY1B,OACE,iCACiB,IAAdJ,GAAsB,qBAAKa,UAAU,aAAf,SACrB,wBAAOA,UAAU,mBAAjB,UACE,qBAAIA,UAAU,4BAAd,UACE,oBAAIA,UAAU,wBAAd,qBACA,uCACA,oBAAIA,UAAU,wBAAd,4BAEF,qBAAIA,UAAU,qBAAd,UACE,oBAAIA,UAAU,0BAA0BC,QAAS,WAAOb,GAAa,IAArE,SAA+Ec,EAAGC,MAAM,GAAGC,UAC3F,oBAAIJ,UAAU,0BAA0BC,QAAS,WAAOb,GAAa,IAArE,SAA+Ec,EAAGC,MAAM,GAAGE,QAC3F,oBAAIL,UAAU,0BAA0BC,QAAS,WAAOb,GAAa,IAArE,SAA+Ec,EAAGC,MAAM,GAAGG,kBAIlF,IAAdnB,GACD,qBAAKa,UAAU,aAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,qBAAKA,UAAU,wBAAf,sBACA,qBAAKA,UAAU,yBAAf,SAAyCE,EAAGC,MAAM,GAAGG,YAEvD,sBAAKN,UAAU,8BAAf,UACE,qBAAKA,UAAU,wBAAf,uBACA,qBAAKA,UAAU,yBAAf,SAAyCE,EAAGC,MAAM,GAAGC,aAEvD,sBAAKJ,UAAU,8BAAf,UACE,qBAAKA,UAAU,wBAAf,qBACA,qBAAKA,UAAU,yBAAf,SAAyCE,EAAGC,MAAM,GAAGE,WAEvD,sBAAKL,UAAU,8BAAf,UACE,qBAAKA,UAAU,wBAAf,sBACA,qBAAKA,UAAU,yBAAf,SAAyCE,EAAGC,MAAM,GAAGI,eAGzD,qBAAKP,UAAU,wBAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,wBAAf,sBACA,8BAAME,EAAGC,MAAM,GAAGK,kBAIxB,sBAAKR,UAAU,iBAAf,UACE,qBAAKA,UAAU,gBAAf,yBACA,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,qBAAqBS,IAAI,yFACxC,qBAAKT,UAAU,qBAAqBS,IAAI,uIACxC,sBAAKT,UAAU,4BAAf,UACE,wBAAQA,UAAU,iBAAiBC,QAAS,WAAOX,GAAY,IAA/D,oBACA,wBAAQU,UAAU,iBAAiBC,QAAS,WAAOX,EAAW,IAA9D,6BAIN,qBAAKU,UAAU,eAAeC,QAAS,WAAOb,GAAa,IAA3D,6BChEKsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAAS4B,eAAe,SAM1BZ,M","file":"static/js/main.ce19a16b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport km from './km.json'\n\nfunction MainPage () {\n  const [showTable, setShowTable] = useState(true)\n  let currentPlay = 1\n  function switchPage (n) {\n    playPage(currentPlay += n)\n  }\n  function playPage (n) {\n    var i\n    const jedesBild = document.getElementsByClassName('slideShowjedesBild')\n    if (n > jedesBild.length) {currentPlay = 1}\n    if (n < 1) {currentPlay = jedesBild.length}\n    for (i = 0; i < jedesBild.length; i++) {\n      jedesBild[i].style.display = \"none\"\n    }\n    jedesBild[currentPlay-1].style.display = \"block\"\n  }\n  return (\n    <div>\n      {showTable === true && <div className='main-frame'>\n        <table className='updateTableFrame'>\n          <tr className='updateTableTitleUniversal'>\n            <th className='updateTableTitleErste'>Section</th>\n            <th>Field</th>\n            <th className='updateTableTitleErste'>Update from</th>\n          </tr>\n          <tr className='updateTableContent'>\n            <td className='updateTableContentJedes' onClick={() => {setShowTable(false)}}>{km.jedes[0].section}</td>\n            <td className='updateTableContentJedes' onClick={() => {setShowTable(false)}}>{km.jedes[0].field}</td>\n            <td className='updateTableContentJedes' onClick={() => {setShowTable(false)}}>{km.jedes[0].update}</td>\n          </tr>\n        </table>\n      </div>}\n      {showTable === false && \n      <div className='main-frame'>\n        <div className='jedesUpdateFrame'>\n          <div className='makeRow'>\n            <div className='jedesUpdateFieldFrame'>\n              <div className='jedesUpdateFieldRow makeRow'>\n                <div className='jedesUpdateFieldTitle'>Update: </div>\n                <div className='jedesUpdateFieldImport'>{km.jedes[0].update}</div>\n              </div>\n              <div className='jedesUpdateFieldRow makeRow'>\n                <div className='jedesUpdateFieldTitle'>Section: </div>\n                <div className='jedesUpdateFieldImport'>{km.jedes[0].section}</div>\n              </div>\n              <div className='jedesUpdateFieldRow makeRow'>\n                <div className='jedesUpdateFieldTitle'>Field: </div>\n                <div className='jedesUpdateFieldImport'>{km.jedes[0].field}</div>\n              </div>\n              <div className='jedesUpdateFieldRow makeRow'>\n                <div className='jedesUpdateFieldTitle'>Choice: </div>\n                <div className='jedesUpdateFieldImport'>{km.jedes[0].option}</div>\n              </div>\n            </div>\n            <div className='jedesUpdateFieldFrame'>\n              <div className='jedesUpdateFieldRow'>\n                <div className='jedesUpdateFieldTitle'>Commend:</div>\n                <div>{km.jedes[0].commend}</div>\n              </div>\n            </div>\n          </div>\n          <div className='slideShowFrame'>\n            <div className='sliderExample'>- Example -</div>\n            <div className='slideShowContainer'>\n              <img className='slideShowjedesBild' src=\"https://upload.wikimedia.org/wikipedia/commons/f/f1/An_example_for_a_nailed_note.jpg\" />\n              <img className='slideShowjedesBild' src=\"https://upload.wikimedia.org/wikipedia/commons/e/ee/Blocksatz-Beispiel_deutsch%2C_German_text_sample_with_fully_justified_text.svg\" />\n              <div className='sliderbottomFrame makeRow'>\n                <button className='silderSwitcher' onClick={() => {switchPage(-1)}}>❮</button>\n                <button className='silderSwitcher' onClick={() => {switchPage(1)}}>❯</button>\n              </div>\n            </div>\n          </div>\n          <div className='returnButton' onClick={() => {setShowTable(true)}}>Return</div>\n        </div>\n      </div>}\n    </div>\n  )\n}\n\nexport default MainPage;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}